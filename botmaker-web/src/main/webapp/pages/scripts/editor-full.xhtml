<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
	xmlns:rich="http://richfaces.org/rich" xmlns:a4j="http://richfaces.org/a4j" template="/WEB-INF/templates/default.xhtml">
	<ui:define name="content">
		<a4j:poll actionListener="#{scriptAction.handleRefreshConversation()}" interval="30000" execute="frm:scriptCode" ontimer="scriptCodeMirror.save()" />
		<h:panelGroup layout="block" styleClass="editor-toolbar">
			<h2 class="fleft">Script Editor</h2>
			<rich:panel id="panelScriptConstrolsId" styleClass="editor-menu">
				<h:panelGroup layout="block" styleClass="editor-info">
					<h:panelGroup layout="block" rendered="#{scriptAction.bot ne null}">
						<h:outputLabel value="Bot" />
						<h:commandLink value="#{scriptAction.bot.name}" action="#{botAction.detail(scriptAction.bot)}">
							<f:ajax execute="@this" immediate="true" />
						</h:commandLink>
					</h:panelGroup>
					<h:panelGroup layout="block" rendered="#{scriptAction.script.command ne null}">
						<h:outputLabel value="Command" />
						<h:commandLink value="#{scriptAction.script.command.key}" action="#{scriptAction.goBackCommand()}">
							<f:ajax execute="@this" immediate="true" />
						</h:commandLink>
					</h:panelGroup>
					<h:panelGroup layout="block" rendered="#{scriptAction.script.question ne null}">
						<h:outputLabel value="Command" />
						<h:outputText value="#{scriptAction.script.question.command.key}" styleClass="txt" />
						<h:outputLabel value="Question" />
						<h:outputText value="#{scriptAction.script.question.instruction}" styleClass="txt" />
					</h:panelGroup>
					<h:panelGroup layout="block" rendered="#{scriptAction.script.validator ne null}">
						<h:outputLabel value="Validator" />
						<h:outputText value="#{scriptAction.script.validator.name}" />
						<h:outputText value=" (#{scriptAction.script.validator.validatorType.descriptor})" />
					</h:panelGroup>
					<h:panelGroup rendered="#{(scriptAction.bot eq null) and (scriptAction.script.validator eq null)}">
						<h:panelGroup styleClass="txt">
							<h:outputLabel value="Script Name" />
							<h:inputText value="#{scriptAction.script.name}" maxlength="40" size="40" />
						</h:panelGroup>
					</h:panelGroup>
					<h:panelGroup layout="block" rendered="#{(scriptAction.bot eq null) and (scriptAction.script.validator eq null)}">
						<h:outputLabel value="Is Generic" />
						<h:panelGroup styleClass="txt">
							<h:selectBooleanCheckbox value="#{scriptAction.script.generic}">
								<f:ajax event="click" execute="@this" />
							</h:selectBooleanCheckbox>
						</h:panelGroup>
					</h:panelGroup>
					<h:panelGroup styleClass="txt">
						<h:outputLabel value="Lang" />
						<h:selectOneMenu id="scriptTypeId" value="#{scriptAction.script.scriptType}">
							<f:selectItems value="#{auxAction.scriptTypeOpt}" var="stOpt" itemLabel="#{stOpt.descriptor}" itemValue="#{stOpt}" />
							<f:ajax event="change" execute="@this" listener="#{scriptAction.handleGenericScripts()}" render="frm:includeGenericId" />
						</h:selectOneMenu>
					</h:panelGroup>
					<h:panelGroup styleClass="txt">
						<h:outputLabel value="Parse" />
						<h:selectOneMenu id="parseModeId" value="#{scriptAction.script.parseMode}">
							<f:selectItem itemValue="MARKDOWN" itemLabel="MarkDown" />
							<f:selectItem itemValue="HTML" itemLabel="Html" />
							<f:ajax event="change" execute="@this" />
						</h:selectOneMenu>
					</h:panelGroup>
					<h:panelGroup layout="block" rendered="#{not scriptAction.script.generic}">
						<h:outputLabel value="Generic" />
						<h:panelGroup styleClass="txt">
							<h:selectOneMenu id="includeGenericId" value="#{scriptAction.script.genericScript}" converter="#{entityConverter}">
								<f:selectItem itemLabel="None" itemValue="#{null}" />
								<f:selectItems value="#{scriptAction.scripts}" var="incGen" itemLabel="#{incGen.name}" itemValue="#{incGen}" />
								<f:ajax event="change" execute="@this" />
							</h:selectOneMenu>
						</h:panelGroup>
						<h:commandLink title="View Generic" styleClass="links-script-code" value="view">
							<a4j:ajax oncomplete="#{rich:component('popupViewGenericScriptId')}.show();" render="frm:popupViewGenericScriptId" />
						</h:commandLink>
					</h:panelGroup>
				</h:panelGroup>
				<h:panelGroup layout="block" styleClass="editor-buttons">
					<h:commandButton value="Go Back" action="#{scriptAction.goBackValidator()}" rendered="#{scriptAction.script.validator ne null}" styleClass="secondary" immediate="true" />
					<h:commandButton id="btScriptSaveId" value="Save" action="#{scriptAction.saveScript()}" styleClass="primary" onclick="scriptCodeMirror.save()">
					</h:commandButton>
				</h:panelGroup>
			</rich:panel>
		</h:panelGroup>
		<rich:panel styleClass="frm-crud editor-screen">
			<h:panelGrid columns="2" columnClasses="pc80 txtop,pc20 txtop" styleClass="pc100">
				<h:panelGroup layout="block" styleClass="hg100pc">
					<h:panelGroup layout="block" styleClass="frm-line">
						<h:inputTextarea id="scriptCode" value="#{scriptAction.script.code}" rows="16" />
					</h:panelGroup>
				</h:panelGroup>
				<h:panelGroup layout="block" styleClass="pc100 hg100pc">
					<h3>Context Vars</h3>
					<h:dataTable id="contextVarsId" headerClass="tx9" var="ctx" value="#{scriptAction.contextVars}" styleClass="pc100" columnClasses="pc10,pc40,pc50 txrgt">
						<h:column headerClass="tx11 pc10">
							<h:graphicImage value="/resources/img/icons/info.png" title="#{ctx.description}" styleClass="tip-left" />
						</h:column>
						<h:column headerClass="tx11 pc40">
							<h:outputText value="#{ctx.name}" styleClass="tx9 green" />
						</h:column>
						<h:column headerClass="tx11 pc50">
							<h:inputText value="#{ctx.value}" size="20" maxlength="120" styleClass="tx9" />
						</h:column>
					</h:dataTable>
					<h:panelGroup layout="block" styleClass="pc100 txrgt">
						<h:commandButton id="btScriptTestId" value="Test" actionListener="#{scriptAction.testScript()}" styleClass="secondary" accesskey="e">
							<a4j:ajax execute="frm:scriptCode @this" render="frm:outputHiddenId" onbeforesubmit="scriptCodeMirror.save();" oncomplete="treatConsoleOutput()" />
						</h:commandButton>
					</h:panelGroup>
					<h3 class="v-space">Output Console</h3>
					<h:panelGroup layout="block" id="consoleOutputId" styleClass="output-console" />
					<h:inputHidden id="outputHiddenId" value="#{scriptAction.debugContent}" />
					<h:panelGroup layout="block" styleClass="pc100 txrgt">
						<h:commandButton id="btClearOutputId" value="Clear Output" actionListener="#{scriptAction.clearOutput()}" styleClass="secondary">
							<a4j:ajax execute="@this" render="frm:outputHiddenId" oncomplete="clearConsoleOutput()" />
						</h:commandButton>
					</h:panelGroup>
				</h:panelGroup>
			</h:panelGrid>
		</rich:panel>
		<rich:popupPanel id="popupViewGenericScriptId" show="false" modal="false" moveable="true" header="Generic Script Viewer" height="460" width="600" maxHeight="460" maxWidth="600" onshow="configureViewer()">
			<f:facet name="controls">
				<h:outputLink value="#" onclick="#{rich:component('popupViewGenericScriptId')}.hide(); return false;">x</h:outputLink>
			</f:facet>
			<rich:panel id="viewGenericPanelId" styleClass="mrauto">
				<h:panelGrid styleClass="pc95" columns="4" columnClasses="pc20 txrgt tx10,pc30 tx10,pc20 txrgt tx10,pc30 tx10">
					<h:outputLabel value="Name" styleClass="tx10" />
					<h:outputLabel value="#{scriptAction.script.genericScript.name}" styleClass="tx10" />
					<h:outputLabel value="Author" styleClass="tx10" />
					<h:outputLabel value="#{scriptAction.script.genericScript.author.name}" styleClass="tx10" />
					<h:outputLabel value="Created" styleClass="tx10" />
					<h:outputLabel value="#{scriptAction.script.genericScript.created}" styleClass="tx10">
						<f:convertDateTime pattern="dd/MM/yyyy HH'h'mm'm'" timeZone="America/Sao_Paulo" />
					</h:outputLabel>
					<h:outputLabel value="Updated" styleClass="tx10" />
					<h:outputLabel value="#{scriptAction.script.genericScript.modified}" styleClass="tx10">
						<f:convertDateTime pattern="dd/MM/yyyy HH'h'mm'm'" timeZone="America/Sao_Paulo" />
					</h:outputLabel>
					<h:outputLabel value="Lang" styleClass="tx10" />
					<h:outputText value="#{scriptAction.script.genericScript.scriptType}"
						styleClass="tx10 #{(scriptAction.script.genericScript.scriptType eq 'GROOVY') ? 'groovy' : (scriptAction.script.genericScript.scriptType eq 'JAVASCRIPT' ? 'javascript' : 'python')}" />
					<h:outputLabel value="Parse" styleClass="tx10" />
					<h:outputText value="#{(scriptAction.script.genericScript.parseMode eq 'MARKDOWN') ? 'MarkDown' : 'Html'}"
						styleClass="tx10 #{(scriptAction.script.genericScript.parseMode eq 'MARKDOWN') ? 'markdown' : 'html'}" />
				</h:panelGrid>
				<h:panelGroup layout="block">
					<h:inputTextarea id="genericCodeId" value="#{scriptAction.script.genericScript.code}" cols="16"/>
				</h:panelGroup>
				<h:panelGroup layout="block" styleClass="frm-submit">
					<h:commandButton value="Close" styleClass="primary">
						<rich:componentControl event="click" target="popupViewGenericScriptId" operation="hide" />
						<f:ajax execute="@this" immediate="true" />
					</h:commandButton>
				</h:panelGroup>
			</rich:panel>
		</rich:popupPanel>
		<script type="text/javascript">
		var scriptCodeMirror = CodeMirror.fromTextArea(document.getElementById('frm:scriptCode'), {
			mode: "groovy",
		    theme: "#{userPreferenceAction.scriptingTheme.value}", 
		    lineNumbers: true, 
		    lineWrapping: true, 
		    indentWithTabs: true, 
		    indentUnit: 4
		});

		function configureCodeMirror() {
			scriptCodeMirror.setSize('98%', 600);
			scriptCodeMirror.setOption('theme', '#{userPreferenceAction.scriptingTheme.value}');
			scriptCodeMirror.setOption('readOnly', false);
		}
		
		function treatConsoleOutput() {
			var treatedContent = '';
 			if (document.getElementById("frm:parseModeId").value == 'MARKDOWN') {
 				treatedContent = markdown.toHTML(document.getElementById('frm:outputHiddenId').value);
 			} else {
 				treatedContent = document.getElementById('frm:outputHiddenId').value;
 			}
 			document.getElementById('frm:consoleOutputId').innerHTML = treatedContent;
		}

		function clearConsoleOutput() {
			document.getElementById('frm:consoleOutputId').innerHTML = '';
		}
		
		configureCodeMirror();

		function configureViewer() {
			scriptGenericMirror = CodeMirror.fromTextArea(document.getElementById('frm:genericCodeId'), {
				mode: "groovy",
			    theme: "#{userPreferenceAction.scriptingTheme.value}", 
			    lineNumbers: true, 
			    lineWrapping: true, 
			    indentWithTabs: true, 
			    indentUnit: 4, 
			    readOnly: true
			});
			scriptGenericMirror.setSize('98%', 270);
		}
	
	</script>
	</ui:define>
</ui:composition>
