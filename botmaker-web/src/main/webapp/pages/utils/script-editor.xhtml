<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html"
	xmlns:rich="http://richfaces.org/rich" xmlns:a4j="http://richfaces.org/a4j">

	<rich:popupPanel id="scriptEditor" styleClass="script-editor" show="#{debugging}" onshow="configureCodeMirror()" domElementAttachment="form" header="Script Editor" height="500" width="1200">
		<f:facet name="controls">
			<h:commandLink>
				<h:graphicImage value="/resources/img/close-popup.png" />
				<rich:componentControl target="scriptEditor" operation="hide" />
			</h:commandLink>
		</f:facet>

		<h:panelGrid columns="3" columnClasses="pc25 txtop,pc55 txtop,pc20 txtop" styleClass="pc100">

			<h:panelGroup layout="block" styleClass="pc100 hg100pc">
				<h4>Available Variables</h4>
				<br />
				<h:dataTable id="contextVarsId" var="ctx" value="#{contextVars}">
					<h:column headerClass="tx11">
						<f:facet name="header">Var Name</f:facet>
						<h:graphicImage value="/resources/img/icons/info.png" title="#{ctx.description}" styleClass="tip-left" />
						<h:inputText value="#{ctx.name}" size="8" maxlength="12" styleClass="tx9" readonly="true" disabled="true" />
					</h:column>
					<h:column>
						<f:facet name="header">Value</f:facet>
						<h:inputText value="#{ctx.value}" size="16" maxlength="120" />
					</h:column>
				</h:dataTable>
			</h:panelGroup>

			<h:panelGroup layout="block" styleClass="hg100pc bck-script-editor">
				<h:panelGrid styleClass="pc100" columns="2" columnClasses="pc30 txtop,pc70">
					<h4 class="mrauto">Script Editor</h4>
					<h:panelGrid columns="4" columnClasses="pc20,pc20,pc20,pc40">
						<h:outputLabel value="Script Type" />
						<h:selectOneMenu id="scriptTypeId" value="#{scriptType}">
							<f:selectItems value="#{auxAction.scriptTypeOpt}" var="stOpt" itemLabel="#{stOpt.descriptor}" itemValue="#{stOpt}" />
							<f:ajax event="change" execute="@this" />
						</h:selectOneMenu>
						<h:outputLabel value="Parse Mode" />
						<h:selectOneMenu id="parseModeId" value="#{parseMode}">
							<f:selectItems value="#{auxAction.parseModeOpt}" var="pmOpt" itemValue="#{pmOpt}" />
							<f:ajax event="change" execute="@this" />
						</h:selectOneMenu>
					</h:panelGrid>
				</h:panelGrid>

				<h:panelGroup layout="block" styleClass="frm-line">
					<h:inputTextarea id="scriptCode" value="#{scriptCode}" rows="16" />
				</h:panelGroup>
			</h:panelGroup>

			<h:panelGroup layout="block" styleClass="pc100 hg100pc">
				<h4>Output Console</h4>
				<br />
				<h:panelGroup layout="block" id="consoleOutputId" styleClass="console"></h:panelGroup>
				<h:inputHidden id="outputHiddenId" value="#{debugContent}" />

				<h:panelGroup id="panelScriptControlsId" layout="block" styleClass="frm-submit">
					<h:commandButton id="btScriptCloseId" rendered="#{not debugging}" value="Close" styleClass="secondary">
						<rich:componentControl event="click" target="scriptEditor" operation="hide" />
						<f:ajax execute="@this" immediate="true" />
					</h:commandButton>
					<h:commandButton id="btScriptTestId" value="Test" rendered="#{debugging}" actionListener="#{testCodeBean[testCodeMethod]}" styleClass="secondary">
						<a4j:ajax execute="frm:scriptEditor" render="frm:outputHiddenId" onbeforesubmit="scriptCodeMirror.save()" oncomplete="treatConsoleOutput()" />
					</h:commandButton>
					<h:commandButton id="btScriptSaveId" value="Save and Close" rendered="#{debugging}" action="#{saveCodeBean[saveCodeMethod]}" styleClass="primary"
						onclick="#{rich:component('scriptEditor')}.hide()" />
				</h:panelGroup>
			</h:panelGroup>

		</h:panelGrid>

	</rich:popupPanel>

	<script type="text/javascript">
		var scriptCodeMirror = CodeMirror.fromTextArea(document.getElementById('frm:scriptCode'), {
			mode: "groovy",
		    theme: "#{userPreferenceAction.scriptingTheme.value}", 
		    lineNumbers: true, 
		    lineWrapping: true, 
		    indentWithTabs: true
		});

		function configureCodeMirror() {
			scriptCodeMirror.setSize('98%', 400);
			scriptCodeMirror.setOption('theme', '#{userPreferenceAction.scriptingTheme.value}');
			scriptCodeMirror.setOption('readOnly', false);
		}
		
		function editableMode(editable) {
			scriptCodeMirror.setOption('readOnly', editable);
		}

		function treatConsoleOutput() {
			var treatedContent = '';
			if (document.getElementById('frm:parseModeId').value == 'MARKDOWN') {
				treatedContent = markdown.toHTML(document.getElementById('frm:outputHiddenId').value);
			} else {
				treatedContent = document.getElementById('frm:outputHiddenId').value;
			}
			document.getElementById('frm:consoleOutputId').innerHTML = treatedContent;
		}

		configureCodeMirror();
	</script>

</ui:composition>